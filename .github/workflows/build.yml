name: CI/CD

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Type of build to perform'
        required: true
        default: 'all'
        type: choice
        options:
        - debug
        - release
        - signed-release
        - all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx4096m
  MAIN_PROJECT_MODULE: app
  REPOSITORY_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set current date
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: tools platform-tools build-tools;34.0.0 platforms;android-34

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Setup Firebase
        run: |
          echo "Setting up Firebase configuration..."
          if [ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
            echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json
            echo "✅ Firebase configuration set up successfully"
          else
            echo "⚠️  GOOGLE_SERVICES_JSON secret not found, creating empty google-services.json"
            echo '{"project_info":{"project_id":"test-project"}}' > app/google-services.json
          fi

      - name: Validate google-services.json
        run: |
          if [ -f "app/google-services.json" ]; then
            echo "Validating google-services.json..."
            if ! jq empty app/google-services.json 2>/dev/null; then
              echo "❌ Invalid JSON in google-services.json"
              exit 1
            fi
            echo "✅ google-services.json is valid"
          else
            echo "❌ google-services.json file not found"
            exit 1
          fi

      - name: Run tests
        run: ./gradlew test

      - name: Build debug APK
        if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'all' || github.event_name == 'pull_request'
        run: ./gradlew assembleDebug

      - name: Build release APK
        if: github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'all' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: ./gradlew assembleRelease

      - name: Build release AAB
        if: github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'all' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: ./gradlew bundleRelease

      - name: Setup signing for release
        if: (github.event.inputs.build_type == 'signed-release' || github.event.inputs.build_type == 'all') && github.event_name == 'workflow_dispatch'
        run: |
          echo "Setting up signing configuration..."
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > signing.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> signing.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> signing.properties

      - name: Build signed release APK
        if: (github.event.inputs.build_type == 'signed-release' || github.event.inputs.build_type == 'all') && github.event_name == 'workflow_dispatch'
        run: ./gradlew assembleRelease

      - name: Build signed release AAB
        if: (github.event.inputs.build_type == 'signed-release' || github.event.inputs.build_type == 'all') && github.event_name == 'workflow_dispatch'
        run: ./gradlew bundleRelease

      - name: Validate APK files
        if: always()
        run: |
          echo "Validating APK files..."
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "✅ Debug APK exists"
            aapt dump badging app/build/outputs/apk/debug/app-debug.apk | head -1
          fi
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "✅ Release APK exists"
            aapt dump badging app/build/outputs/apk/release/app-release.apk | head -1
          fi

      - name: Upload debug APK
        if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'all' || github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.REPOSITORY_NAME }} - Debug APK
          path: app/build/outputs/apk/debug/
          retention-days: 30

      - name: Upload release APK
        if: (github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'all' || (github.event_name == 'push' && github.ref == 'refs/heads/main')) && !contains(github.event.inputs.build_type, 'signed')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.REPOSITORY_NAME }} - Release APK
          path: app/build/outputs/apk/release/
          retention-days: 90

      - name: Upload signed release APK
        if: (github.event.inputs.build_type == 'signed-release' || github.event.inputs.build_type == 'all') && github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.REPOSITORY_NAME }} - Signed Release APK
          path: app/build/outputs/apk/release/
          retention-days: 90

      - name: Upload release AAB
        if: (github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'all' || (github.event_name == 'push' && github.ref == 'refs/heads/main')) && !contains(github.event.inputs.build_type, 'signed')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.REPOSITORY_NAME }} - Release AAB
          path: app/build/outputs/bundle/release/
          retention-days: 90

      - name: Upload signed release AAB
        if: (github.event.inputs.build_type == 'signed-release' || github.event.inputs.build_type == 'all') && github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.REPOSITORY_NAME }} - Signed Release AAB
          path: app/build/outputs/bundle/release/
          retention-days: 90
